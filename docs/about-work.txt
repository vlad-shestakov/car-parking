about-work.txt

---------------------------------------------------------
Необходимо реализовать сервис, который получает информацию по загрузке парковки. Реализовать 4 CRUD запроса: получение, создание, редактирование и удаление всех связей данных одним запросом.

Требования:

· Хранить 3 сущности: 1) машина (клиент); 2) парковочное место; 3) время бронирования и цена;
· Обеспечить связи между сущностями (связь на своё усмотрение, но нужно будет обосновать)
· Хранить данные сущности в бд (выбор СУБД не принципиален)
· Обеспечить получение данных согласно тексту задачи всех связанных сущностей
· Получать данные из бд средствами JPA
· Реализовать REST API для получения данных
· Для проверки рекомендовано использовать Swagger

Технологический стек:
1) Клиентская часть (отсутствует) – для проверки использовать swager или постман
2) Серверная часть – Spring Boot
3) Бд – выбор не принципиален (рекомендовано H2)

Дополнение:
При большей погружённости рекомендовано обеспечить автоматическую накатку данных в бд пользуясь средствами Flyway


---------------------------------------------------------
1) машина (клиент)
client
	clientid
	licensenumber

2) парковочное место
parkspace
	clientid
	parkspacenum

3) время бронирования и цена
BOOKINGTIME
	clientid
	datestart
	datefinish
	renttariff
	rentsum
	payedsum
	ispaid


---------------------------------------------------------
статус парковки
	сколько свободных мест на парковке
	данные о машине / сколько стоит парковка машины, оплачена ли парковка
загружаем парковку
	машина заехала
обновление данных парковки
	машина заняла парковочное место
	машина освободила место
	клиент оплатил парковку
разгружаем парковку
	машина уехала

---------------------------------------------------------
данные о машине
	когда приехала, сколько стоит, оплачено или нет
данные о машинах
	список данных о машинах
сколько свободных мест на парковке
	from parkspace

машина заехала
	+ client
	+ bookingtime
		+ clientid
		+ datestart
		+ renttariff

машина заняла парковочное место
	+ client
	+ parkspace

машина освободила место
	- parkspace

клиент оплатил парковку
	* bookingtime

---------------------------------------------------------
-- prototype
delete
	clientid
select
	clientid
	out
		clientid
		licensenumber
		parkspaceid
		bookingtimeid
		datestart
		datefinish
		renttariff
		rentsum
		payedsum
		ispaid
select
	clientid - null
create
	clientid
	licensenumber
	renttariff
	-datestart
update
	clientid
	parkspaceid
	payedsum
---------------------------------------------------------


---------------------------------------------------------
-- for PostgreSQL deprecated
create database car_parking;

\c car_parking;

create table client
(
	clientid serial not null
		constraint client_pk
			primary key,
	licensenumber varchar(50)
);


create table PARKSPACE
(
	clientid serial not null
		constraint parkspace_pk
			primary key,
	parkspacenum integer
);


create table bookingtime
(
	bookingtimeid serial not null
		constraint bookingtime_pk
			primary key,
	clientid integer
);
---------------------------------------------------------
-- start.spring.io
https://start.spring.io/#!type=maven-project&language=java&platformVersion=2.6.4&packaging=jar&jvmVersion=11&groupId=com.shestakov&artifactId=car-parking&name=car-parking&description=Demo%20project%20for%20Spring%20Boot&packageName=com.shestakov.car-parking&dependencies=web,h2,data-rest,data-jpa,lombok


---------------------------------------------------------